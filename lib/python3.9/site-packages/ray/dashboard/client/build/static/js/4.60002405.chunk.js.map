{"version":3,"sources":["util/converter.ts","components/SearchComponent.tsx","components/Loading.tsx","components/PercentageBar.tsx","common/RowStyles.tsx","components/StatesCounter.tsx","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","pages/node/GPUColumn.tsx","pages/node/GRAMColumn.tsx","pages/node/NodeRow.tsx","pages/node/index.tsx","pages/node/hook/useNodeList.ts"],"names":["memoryConverter","bytes","toFixed","useStyles","makeStyles","theme","search","margin","spacing","marginTop","SearchInput","label","onChange","defaultValue","classes","className","size","InputProps","value","target","endAdornment","position","SearchSelect","options","select","SelectProps","style","width","map","e","Loading","loading","open","zIndex","color","useStyle","container","background","border","padding","height","lineHeight","boxSizing","borderRadius","displayBar","palette","paper","right","transition","borderTopLeftRadius","borderBottomLeftRadius","text","fontSize","primary","textAlign","PercentageBar","props","num","total","per","Math","round","min","max","children","rowStyles","createStyles","expandCollapseIcon","secondary","verticalAlign","idCol","display","overflow","textOverflow","whiteSpace","StateCounter","type","list","stateMap","forEach","state","alignItems","item","status","suffix","length","Object","entries","s","TableContainer","React","ref","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","overflowX","name","Switch","_props$color","_props$edge","edge","_props$size","icon","thumb","edgeStart","edgeEnd","concat","capitalize","SwitchBase","checkedIcon","switchBase","input","checked","disabled","track","flexShrink","colorAdjust","marginLeft","marginRight","top","left","grey","transitions","create","duration","shortest","transform","opacity","colorPrimary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","sizeSmall","boxShadow","shadows","Button","styles","ButtonGroup","_props$disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$variant","variant","buttonClassName","grouped","role","contained","vertical","child","shape","flexDirection","minWidth","groupedHorizontal","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","groupedTextSecondary","groupedOutlined","groupedOutlinedHorizontal","borderRightColor","groupedOutlinedVertical","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","NodeGPUView","node","GPU_COL_WIDTH","undefined","gpus","gpu","i","key","uuid","slot","Typography","WorkerGPU","message","workerRes","worker","coreWorkerStats","usedResources","workerUsedGPUResources","resourceSlots","sort","slot1","slot2","resourceSlot","NodeGRAM","nodeGRAMEntries","gpuName","utilization","memoryUsed","memoryTotal","WorkerGRAM","workerGRAMEntries","process","processes","find","pid","gpuMemoryUsage","filter","entry","GRAMEntry","ratioStr","used","getMiBRatioNoPercent","Box","flexWrap","Tooltip","title","NodeRow","expanded","onExpandButtonClick","hostname","ip","cpu","mem","disk","networkSpeed","raylet","logUrl","objectStoreTotalMemory","objectStoreAvailableMemory","objectStoreUsedMemory","TableRow","TableCell","IconButton","onClick","StatusChip","align","nodeId","arrow","interactive","to","Number","percent","encodeURIComponent","WorkerRow","cpuPercent","memoryInfo","cmdline","coreWorker","workerLogUrl","workerId","rss","NodeRows","isRefreshing","startExpanded","useState","isExpanded","setExpanded","workers","setWorkers","tot","useRef","getDetail","useCallback","a","getNodeDetail","data","rspData","result","detail","sortedWorkers","sortBy","console","error","current","setTimeout","useEffect","clearTimeout","Fragment","columns","brpcLinkChanger","href","location","window","pathArr","pathname","split","some","index","findIndex","includes","resultArr","slice","push","protocol","host","join","NodeCard","Paper","fontWeight","textDecoration","Grid","xs","justify","Nodes","nodeList","setList","msg","setMsg","setRefresh","mode","setMode","setFilter","pageSize","pageNo","page","setPage","useSorter","sorterFunc","setOrderDesc","setSortKey","sorterKey","getList","getNodeList","summary","b","every","f","val","onSwitchChange","event","changeFilter","originalNodes","useNodeList","startsWith","TitleCard","inputProps","trim","_","Pagination","count","ceil","Table","TableHead","col","TableBody"],"mappings":"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","file":"static/js/4.60002405.chunk.js","sourcesContent":["export const memoryConverter = (bytes: number) => {\n  if (bytes < 1024) {\n    return `${bytes.toFixed(4)}KB`;\n  }\n\n  if (bytes < 1024 ** 2) {\n    return `${(bytes / 1024 ** 1).toFixed(2)}KB`;\n  }\n\n  if (bytes < 1024 ** 3) {\n    return `${(bytes / 1024 ** 2).toFixed(2)}MB`;\n  }\n\n  if (bytes < 1024 ** 4) {\n    return `${(bytes / 1024 ** 3).toFixed(2)}GB`;\n  }\n\n  if (bytes < 1024 ** 5) {\n    return `${(bytes / 1024 ** 4).toFixed(2)}TB`;\n  }\n\n  if (bytes < 1024 ** 6) {\n    return `${(bytes / 1024 ** 5).toFixed(2)}TB`;\n  }\n\n  return \"\";\n};\n","import {\n  InputAdornment,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    margin: theme.spacing(1),\n    marginTop: 0,\n  },\n}));\n\nexport const SearchInput = ({\n  label,\n  onChange,\n  defaultValue,\n}: {\n  label: string;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      InputProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value);\n          }\n        },\n        defaultValue,\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <SearchOutlined />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport const SearchSelect = ({\n  label,\n  onChange,\n  options,\n}: {\n  label: string;\n  onChange?: (value: string) => void;\n  options: (string | [string, string])[];\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      select\n      SelectProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value as string);\n          }\n        },\n        style: {\n          width: 100,\n        },\n      }}\n    >\n      <MenuItem value=\"\">All</MenuItem>\n      {options.map((e) =>\n        typeof e === \"string\" ? (\n          <MenuItem value={e}>{e}</MenuItem>\n        ) : (\n          <MenuItem value={e[0]}>{e[1]}</MenuItem>\n        ),\n      )}\n    </TextField>\n  );\n};\n","import { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Loading = ({ loading }: { loading: boolean }) => (\n  <Backdrop open={loading} style={{ zIndex: 100 }}>\n    <CircularProgress color=\"primary\" />\n  </Backdrop>\n);\n\nexport default Loading;\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    background: \"linear-gradient(45deg, #21CBF3ee 30%, #2196F3ee 90%)\",\n    border: `1px solid #ffffffbb`,\n    padding: \"0 12px\",\n    height: 18,\n    lineHeight: \"18px\",\n    position: \"relative\",\n    boxSizing: \"content-box\",\n    borderRadius: 4,\n  },\n  displayBar: {\n    background: theme.palette.background.paper,\n    position: \"absolute\",\n    right: 0,\n    height: 18,\n    transition: \"0.5s width\",\n    borderRadius: 2,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    border: \"2px solid transparent\",\n    boxSizing: \"border-box\",\n  },\n  text: {\n    fontSize: 12,\n    zIndex: 2,\n    position: \"relative\",\n    color: theme.palette.text.primary,\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n}));\n\nconst PercentageBar = (\n  props: PropsWithChildren<{ num: number; total: number }>,\n) => {\n  const { num, total } = props;\n  const classes = useStyle();\n  const per = Math.round((num / total) * 100);\n\n  return (\n    <div className={classes.container}>\n      <div\n        className={classes.displayBar}\n        style={{\n          width: `${Math.min(Math.max(0, 100 - per), 100)}%`,\n        }}\n      />\n      <div className={classes.text}>{props.children}</div>\n    </div>\n  );\n};\n\nexport default PercentageBar;\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst rowStyles = makeStyles((theme) =>\n  createStyles({\n    expandCollapseIcon: {\n      color: theme.palette.text.secondary,\n      fontSize: \"1.5em\",\n      verticalAlign: \"middle\",\n    },\n    idCol: {\n      display: \"block\",\n      width: \"50px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  }),\n);\n\nexport default rowStyles;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { StatusChip } from \"./StatusChip\";\n\nconst StateCounter = ({\n  type,\n  list,\n}: {\n  type: string;\n  list: { state: string }[];\n}) => {\n  const stateMap = {} as { [state: string]: number };\n  list.forEach(({ state }) => {\n    stateMap[state] = stateMap[state] + 1 || 1;\n  });\n\n  return (\n    <Grid container spacing={2} alignItems=\"center\">\n      <Grid item>\n        <StatusChip status=\"TOTAL\" type={type} suffix={`x ${list.length}`} />\n      </Grid>\n      {Object.entries(stateMap).map(([s, num]) => (\n        <Grid item>\n          <StatusChip status={s} type={type} suffix={` x ${num}`} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default StateCounter;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: fade(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: fade(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { NodeDetail } from \"../../type/node\";\nimport { Worker } from \"../../type/worker\";\nimport {\n  GPU_COL_WIDTH,\n  NodeGPUEntry,\n  WorkerGPUEntry,\n} from \"../dashboard/node-info/features/GPU\";\n\nexport const NodeGPUView = ({ node }: { node: NodeDetail }) => {\n  return (\n    <div style={{ minWidth: GPU_COL_WIDTH }}>\n      {node.gpus !== undefined && node.gpus.length !== 0 ? (\n        node.gpus.map((gpu, i) => (\n          <NodeGPUEntry key={gpu.uuid} gpu={gpu} slot={i} />\n        ))\n      ) : (\n        <Typography color=\"textSecondary\" component=\"span\" variant=\"inherit\">\n          N/A\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport const WorkerGPU = ({ worker }: { worker: Worker }) => {\n  const workerRes = worker.coreWorkerStats[0]?.usedResources;\n  const workerUsedGPUResources = workerRes?.[\"GPU\"];\n  let message;\n  if (workerUsedGPUResources === undefined) {\n    message = (\n      <Typography color=\"textSecondary\" component=\"span\" variant=\"inherit\">\n        N/A\n      </Typography>\n    );\n  } else {\n    message = workerUsedGPUResources.resourceSlots\n      .sort((slot1, slot2) => {\n        if (slot1.slot === undefined && slot2.slot === undefined) {\n          return 0;\n        } else if (slot1.slot === undefined) {\n          return 1;\n        } else if (slot2.slot === undefined) {\n          return -1;\n        } else {\n          return slot1.slot - slot2.slot;\n        }\n      })\n      .map((resourceSlot) => (\n        <WorkerGPUEntry key={resourceSlot.slot} resourceSlot={resourceSlot} />\n      ));\n  }\n  return <div style={{ minWidth: 60 }}>{message}</div>;\n};\n","import { Box, Tooltip, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { RightPaddedTypography } from \"../../common/CustomTypography\";\nimport PercentageBar from \"../../components/PercentageBar\";\nimport { NodeDetail } from \"../../type/node\";\nimport { Worker } from \"../../type/worker\";\n\nconst GRAM_COL_WIDTH = 120;\n\nexport const NodeGRAM = ({ node }: { node: NodeDetail }) => {\n  const nodeGRAMEntries = (node.gpus ?? []).map((gpu, i) => {\n    const props = {\n      key: gpu.uuid,\n      gpuName: gpu.name,\n      utilization: gpu.memoryUsed,\n      total: gpu.memoryTotal,\n      slot: i,\n    };\n    return <GRAMEntry {...props} />;\n  });\n  return (\n    <div style={{ minWidth: 60 }}>\n      {nodeGRAMEntries.length === 0 ? (\n        <Typography color=\"textSecondary\" component=\"span\" variant=\"inherit\">\n          N/A\n        </Typography>\n      ) : (\n        <div style={{ minWidth: GRAM_COL_WIDTH }}>{nodeGRAMEntries}</div>\n      )}\n    </div>\n  );\n};\n\nexport const WorkerGRAM = ({\n  worker,\n  node,\n}: {\n  worker: Worker;\n  node: NodeDetail;\n}) => {\n  const workerGRAMEntries = (node.gpus ?? [])\n    .map((gpu, i) => {\n      const process = gpu.processes.find(\n        (process) => process.pid === worker.pid,\n      );\n      if (!process) {\n        return undefined;\n      }\n      const props = {\n        key: gpu.uuid,\n        gpuName: gpu.name,\n        total: gpu.memoryTotal,\n        utilization: process.gpuMemoryUsage,\n        slot: i,\n      };\n      return <GRAMEntry {...props} />;\n    })\n    .filter((entry) => entry !== undefined);\n\n  return workerGRAMEntries.length === 0 ? (\n    <Typography color=\"textSecondary\" component=\"span\" variant=\"inherit\">\n      N/A\n    </Typography>\n  ) : (\n    <div style={{ minWidth: GRAM_COL_WIDTH }}>{workerGRAMEntries}</div>\n  );\n};\n\nconst getMiBRatioNoPercent = (used: number, total: number) =>\n  `${used}MiB/${total}MiB`;\n\ntype GRAMEntryProps = {\n  gpuName: string;\n  slot: number;\n  utilization: number;\n  total: number;\n};\n\nconst GRAMEntry: React.FC<GRAMEntryProps> = ({\n  gpuName,\n  slot,\n  utilization,\n  total,\n}) => {\n  const ratioStr = getMiBRatioNoPercent(utilization, total);\n  return (\n    <Box display=\"flex\" flexWrap=\"nowrap\" style={{ minWidth: GRAM_COL_WIDTH }}>\n      <Tooltip title={gpuName}>\n        <Box display=\"flex\" flexWrap=\"nowrap\">\n          <RightPaddedTypography variant=\"body1\">\n            [{slot}]:{\" \"}\n          </RightPaddedTypography>\n          <PercentageBar num={utilization} total={total}>\n            {ratioStr}\n          </PercentageBar>\n        </Box>\n      </Tooltip>\n    </Box>\n  );\n};\n","import {\n  Box,\n  IconButton,\n  TableCell,\n  TableRow,\n  Tooltip,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { sortBy } from \"lodash\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport rowStyles from \"../../common/RowStyles\";\nimport PercentageBar from \"../../components/PercentageBar\";\nimport { StatusChip } from \"../../components/StatusChip\";\nimport { getNodeDetail } from \"../../service/node\";\nimport { NodeDetail } from \"../../type/node\";\nimport { Worker } from \"../../type/worker\";\nimport { memoryConverter } from \"../../util/converter\";\nimport { NodeGPUView, WorkerGPU } from \"./GPUColumn\";\nimport { NodeGRAM, WorkerGRAM } from \"./GRAMColumn\";\n\nconst TEXT_COL_MIN_WIDTH = 100;\n\ntype NodeRowProps = Pick<NodeRowsProps, \"node\"> & {\n  /**\n   * Whether the node has been expanded to show workers\n   */\n  expanded: boolean;\n  /**\n   * Click handler for when one clicks on the expand/unexpand button in this row.\n   */\n  onExpandButtonClick: () => void;\n};\n\n/**\n * A single row that represents the node information only.\n * Does not show any data about the node's workers.\n */\nconst NodeRow = ({ node, expanded, onExpandButtonClick }: NodeRowProps) => {\n  const {\n    hostname = \"\",\n    ip = \"\",\n    cpu = 0,\n    mem,\n    disk,\n    networkSpeed = [0, 0],\n    raylet,\n    logUrl,\n  } = node;\n\n  const classes = rowStyles();\n\n  const objectStoreTotalMemory =\n    raylet.objectStoreAvailableMemory + raylet.objectStoreUsedMemory;\n\n  return (\n    <TableRow>\n      <TableCell>\n        <IconButton size=\"small\" onClick={onExpandButtonClick}>\n          {!expanded ? (\n            <AddIcon className={classes.expandCollapseIcon} />\n          ) : (\n            <RemoveIcon className={classes.expandCollapseIcon} />\n          )}\n        </IconButton>\n      </TableCell>\n      <TableCell>\n        <StatusChip type=\"node\" status={raylet.state} />\n      </TableCell>\n      <TableCell align=\"center\">\n        <Tooltip title={raylet.nodeId} arrow interactive>\n          <Link to={`/node/${raylet.nodeId}`} className={classes.idCol}>\n            {raylet.nodeId}\n          </Link>\n        </Tooltip>\n      </TableCell>\n      <TableCell align=\"center\">\n        <Box minWidth={TEXT_COL_MIN_WIDTH}>{hostname}</Box>\n      </TableCell>\n      <TableCell align=\"center\">\n        <Box minWidth={TEXT_COL_MIN_WIDTH}>{ip}</Box>\n      </TableCell>\n      <TableCell>\n        <PercentageBar num={Number(cpu)} total={100}>\n          {cpu}%\n        </PercentageBar>\n      </TableCell>\n      <TableCell>\n        {mem && (\n          <PercentageBar num={Number(mem[0] - mem[1])} total={mem[0]}>\n            {memoryConverter(mem[0] - mem[1])}/{memoryConverter(mem[0])}(\n            {mem[2].toFixed(1)}\n            %)\n          </PercentageBar>\n        )}\n      </TableCell>\n      <TableCell>\n        <NodeGPUView node={node} />\n      </TableCell>\n      <TableCell>\n        <NodeGRAM node={node} />\n      </TableCell>\n      <TableCell>\n        {raylet && raylet.objectStoreUsedMemory && (\n          <PercentageBar\n            num={raylet.objectStoreUsedMemory}\n            total={objectStoreTotalMemory}\n          >\n            {memoryConverter(raylet.objectStoreUsedMemory)}/\n            {memoryConverter(objectStoreTotalMemory)}\n          </PercentageBar>\n        )}\n      </TableCell>\n      <TableCell>\n        {disk && disk[\"/\"] && (\n          <PercentageBar num={Number(disk[\"/\"].used)} total={disk[\"/\"].total}>\n            {memoryConverter(disk[\"/\"].used)}/{memoryConverter(disk[\"/\"].total)}\n            ({disk[\"/\"].percent.toFixed(1)}%)\n          </PercentageBar>\n        )}\n      </TableCell>\n      <TableCell align=\"center\">{memoryConverter(networkSpeed[0])}/s</TableCell>\n      <TableCell align=\"center\">{memoryConverter(networkSpeed[1])}/s</TableCell>\n      <TableCell>\n        <Link to={`/log/${encodeURIComponent(logUrl)}`}>Log</Link>\n      </TableCell>\n    </TableRow>\n  );\n};\n\ntype WorkerRowProps = {\n  /**\n   * Details of the worker\n   */\n  worker: Worker;\n  /**\n   * Detail of the node the worker is inside.\n   */\n  node: NodeDetail;\n};\n\n/**\n * A single row that represents the data of a Worker\n */\nconst WorkerRow = ({ node, worker }: WorkerRowProps) => {\n  const classes = rowStyles();\n\n  const { mem, logUrl } = node;\n  const {\n    pid,\n    cpuPercent: cpu = 0,\n    memoryInfo,\n    coreWorkerStats,\n    cmdline,\n  } = worker;\n\n  const coreWorker = coreWorkerStats.length ? coreWorkerStats[0] : undefined;\n  const workerLogUrl = coreWorker\n    ? `/log/${encodeURIComponent(logUrl)}?fileName=${coreWorker.workerId}`\n    : `/log/${encodeURIComponent(logUrl)}`;\n\n  return (\n    <TableRow>\n      <TableCell>\n        {/* Empty because workers do not have an expand / unexpand button. */}\n      </TableCell>\n      <TableCell>\n        <StatusChip type=\"worker\" status=\"ALIVE\" />\n      </TableCell>\n      <TableCell align=\"center\">\n        {coreWorker && (\n          <Tooltip title={coreWorker.workerId} arrow interactive>\n            <span className={classes.idCol}>{coreWorker.workerId}</span>\n          </Tooltip>\n        )}\n      </TableCell>\n      <TableCell align=\"center\">{cmdline[0]}</TableCell>\n      <TableCell align=\"center\">{pid}</TableCell>\n      <TableCell>\n        <PercentageBar num={Number(cpu)} total={100}>\n          {cpu}%\n        </PercentageBar>\n      </TableCell>\n      <TableCell>\n        {mem && (\n          <PercentageBar num={memoryInfo.rss} total={mem[0]}>\n            {memoryConverter(memoryInfo.rss)}/{memoryConverter(mem[0])}(\n            {(memoryInfo.rss / mem[0]).toFixed(1)}\n            %)\n          </PercentageBar>\n        )}\n      </TableCell>\n      <TableCell>\n        <WorkerGPU worker={worker} />\n      </TableCell>\n      <TableCell>\n        <WorkerGRAM worker={worker} node={node} />\n      </TableCell>\n      <TableCell>N/A</TableCell>\n      <TableCell>N/A</TableCell>\n      <TableCell align=\"center\">N/A</TableCell>\n      <TableCell align=\"center\">N/A</TableCell>\n      <TableCell>\n        <Link to={workerLogUrl} target=\"_blank\">\n          Log\n        </Link>\n      </TableCell>\n    </TableRow>\n  );\n};\n\ntype NodeRowsProps = {\n  /**\n   * Details of the node\n   */\n  node: NodeDetail;\n  /**\n   * Whether the node row should refresh data about its workers.\n   */\n  isRefreshing: boolean;\n  /**\n   * Whether the row should start expanded. By default, this is false.\n   */\n  startExpanded?: boolean;\n};\n\n/**\n * The rows related to a node and its workers. Expandable to show information about workers.\n */\nexport const NodeRows = ({\n  node,\n  isRefreshing,\n  startExpanded = false,\n}: NodeRowsProps) => {\n  const [isExpanded, setExpanded] = useState(startExpanded);\n  const [workers, setWorkers] = useState<Worker[]>([]);\n  const tot = useRef<NodeJS.Timeout>();\n\n  const getDetail = useCallback(async () => {\n    if (!isRefreshing || !isExpanded) {\n      return;\n    }\n    const { data } = await getNodeDetail(node.raylet.nodeId);\n    const { data: rspData, result } = data;\n    if (rspData?.detail) {\n      const sortedWorkers = sortBy(\n        rspData.detail.workers,\n        (worker) => worker.pid,\n      );\n      setWorkers(sortedWorkers);\n    }\n\n    if (result === false) {\n      console.error(\"Node Query Error Please Check Node Name\");\n    }\n\n    tot.current = setTimeout(getDetail, 4000);\n  }, [isRefreshing, isExpanded, node.raylet.nodeId]);\n\n  useEffect(() => {\n    getDetail();\n    return () => {\n      if (tot.current) {\n        clearTimeout(tot.current);\n      }\n    };\n  }, [getDetail]);\n\n  const handleExpandButtonClick = () => {\n    setExpanded(!isExpanded);\n  };\n\n  return (\n    <React.Fragment>\n      <NodeRow\n        node={node}\n        expanded={isExpanded}\n        onExpandButtonClick={handleExpandButtonClick}\n      />\n      {isExpanded &&\n        workers.map((worker) => (\n          <WorkerRow key={worker.pid} node={node} worker={worker} />\n        ))}\n    </React.Fragment>\n  );\n};\n","import {\n  Button,\n  ButtonGroup,\n  Grid,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport PercentageBar from \"../../components/PercentageBar\";\nimport { SearchInput, SearchSelect } from \"../../components/SearchComponent\";\nimport StateCounter from \"../../components/StatesCounter\";\nimport { StatusChip } from \"../../components/StatusChip\";\nimport TitleCard from \"../../components/TitleCard\";\nimport { NodeDetail } from \"../../type/node\";\nimport { memoryConverter } from \"../../util/converter\";\nimport { useNodeList } from \"./hook/useNodeList\";\nimport { NodeRows } from \"./NodeRow\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n    position: \"relative\",\n  },\n}));\n\nconst columns = [\n  \"\", // Expand button\n  \"State\",\n  \"ID\",\n  \"Host / Cmd Line\",\n  \"IP / PID\",\n  \"CPU Usage\",\n  \"Memory\",\n  \"GPU\",\n  \"GRAM\",\n  \"Object Store Memory\",\n  \"Disk(root)\",\n  \"Sent\",\n  \"Received\",\n  \"Log\",\n];\n\nexport const brpcLinkChanger = (href: string) => {\n  const { location } = window;\n  const { pathname } = location;\n  const pathArr = pathname.split(\"/\");\n  if (pathArr.some((e) => e.split(\".\").length > 1)) {\n    const index = pathArr.findIndex((e) => e.includes(\".\"));\n    const resultArr = pathArr.slice(0, index);\n    resultArr.push(href);\n    return `${location.protocol}//${location.host}${resultArr.join(\"/\")}`;\n  }\n\n  return `http://${href}`;\n};\n\nexport const NodeCard = (props: { node: NodeDetail }) => {\n  const { node } = props;\n\n  if (!node) {\n    return null;\n  }\n\n  const { raylet, hostname, ip, cpu, mem, networkSpeed, disk, logUrl } = node;\n  const { nodeId, state, objectStoreUsedMemory, objectStoreAvailableMemory } =\n    raylet;\n\n  const objectStoreTotalMemory =\n    objectStoreUsedMemory + objectStoreAvailableMemory;\n\n  return (\n    <Paper variant=\"outlined\" style={{ padding: \"12px 12px\", margin: 12 }}>\n      <p style={{ fontWeight: \"bold\", fontSize: 12, textDecoration: \"none\" }}>\n        <Link to={`node/${nodeId}`}>{nodeId}</Link>{\" \"}\n      </p>\n      <p>\n        <Grid container spacing={1}>\n          <Grid item>\n            <StatusChip type=\"node\" status={state} />\n          </Grid>\n          <Grid item>\n            {hostname}({ip})\n          </Grid>\n          {networkSpeed && networkSpeed[0] >= 0 && (\n            <Grid item>\n              <span style={{ fontWeight: \"bold\" }}>Sent</span>{\" \"}\n              {memoryConverter(networkSpeed[0])}/s{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>Received</span>{\" \"}\n              {memoryConverter(networkSpeed[1])}/s\n            </Grid>\n          )}\n        </Grid>\n      </p>\n      <Grid container spacing={1} alignItems=\"baseline\">\n        {cpu >= 0 && (\n          <Grid item xs>\n            CPU\n            <PercentageBar num={Number(cpu)} total={100}>\n              {cpu}%\n            </PercentageBar>\n          </Grid>\n        )}\n        {mem && (\n          <Grid item xs>\n            Memory\n            <PercentageBar num={Number(mem[0] - mem[1])} total={mem[0]}>\n              {memoryConverter(mem[0] - mem[1])}/{memoryConverter(mem[0])}(\n              {mem[2]}%)\n            </PercentageBar>\n          </Grid>\n        )}\n        {raylet && (\n          <Grid item xs>\n            Object Store Memory\n            <PercentageBar\n              num={objectStoreUsedMemory}\n              total={objectStoreTotalMemory}\n            >\n              {memoryConverter(objectStoreUsedMemory)}/\n              {memoryConverter(objectStoreTotalMemory)}\n            </PercentageBar>\n          </Grid>\n        )}\n        {disk && disk[\"/\"] && (\n          <Grid item xs>\n            Disk('/')\n            <PercentageBar num={Number(disk[\"/\"].used)} total={disk[\"/\"].total}>\n              {memoryConverter(disk[\"/\"].used)}/\n              {memoryConverter(disk[\"/\"].total)}({disk[\"/\"].percent}%)\n            </PercentageBar>\n          </Grid>\n        )}\n      </Grid>\n      <Grid container justify=\"flex-end\" spacing={1} style={{ margin: 8 }}>\n        <Grid>\n          <Button>\n            <Link to={`/log/${encodeURIComponent(logUrl)}`}>log</Link>\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst Nodes = () => {\n  const classes = useStyles();\n  const {\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    nodeList,\n    changeFilter,\n    page,\n    setPage,\n    setSortKey,\n    setOrderDesc,\n    mode,\n    setMode,\n  } = useNodeList();\n\n  return (\n    <div className={classes.root}>\n      <Loading loading={msg.startsWith(\"Loading\")} />\n      <TitleCard title=\"NODES\">\n        Auto Refresh:\n        <Switch\n          checked={isRefreshing}\n          onChange={onSwitchChange}\n          name=\"refresh\"\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n        <br />\n        Request Status: {msg}\n      </TitleCard>\n      <TitleCard title=\"Node Statistics\">\n        <StateCounter type=\"node\" list={nodeList} />\n      </TitleCard>\n      <TitleCard title=\"Node List\">\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <SearchInput\n              label=\"Host\"\n              onChange={(value) => changeFilter(\"hostname\", value.trim())}\n            />\n          </Grid>\n          <Grid item>\n            <SearchInput\n              label=\"IP\"\n              onChange={(value) => changeFilter(\"ip\", value.trim())}\n            />\n          </Grid>\n          <Grid item>\n            <SearchSelect\n              label=\"State\"\n              onChange={(value) => changeFilter(\"state\", value.trim())}\n              options={[\"ALIVE\", \"DEAD\"]}\n            />\n          </Grid>\n          <Grid item>\n            <SearchInput\n              label=\"Page Size\"\n              onChange={(value) =>\n                setPage(\"pageSize\", Math.min(Number(value), 500) || 10)\n              }\n            />\n          </Grid>\n          <Grid item>\n            <SearchSelect\n              label=\"Sort By\"\n              options={[\n                [\"state\", \"State\"],\n                [\"mem[2]\", \"Used Memory\"],\n                [\"mem[0]\", \"Total Memory\"],\n                [\"cpu\", \"CPU\"],\n                [\"networkSpeed[0]\", \"Sent\"],\n                [\"networkSpeed[1]\", \"Received\"],\n                [\"disk./.used\", \"Used Disk\"],\n              ]}\n              onChange={(val) => setSortKey(val)}\n            />\n          </Grid>\n          <Grid item>\n            <span style={{ margin: 8, marginTop: 0 }}>\n              Reverse:\n              <Switch onChange={(_, checked) => setOrderDesc(checked)} />\n            </span>\n          </Grid>\n          <Grid item>\n            <ButtonGroup size=\"small\">\n              <Button\n                onClick={() => setMode(\"table\")}\n                color={mode === \"table\" ? \"primary\" : \"default\"}\n              >\n                Table\n              </Button>\n              <Button\n                onClick={() => setMode(\"card\")}\n                color={mode === \"card\" ? \"primary\" : \"default\"}\n              >\n                Card\n              </Button>\n            </ButtonGroup>\n          </Grid>\n        </Grid>\n        <div>\n          <Pagination\n            count={Math.ceil(nodeList.length / page.pageSize)}\n            page={page.pageNo}\n            onChange={(e, pageNo) => setPage(\"pageNo\", pageNo)}\n          />\n        </div>\n        {mode === \"table\" && (\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {columns.map((col) => (\n                    <TableCell align=\"center\" key={col}>\n                      {col}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {nodeList\n                  .slice(\n                    (page.pageNo - 1) * page.pageSize,\n                    page.pageNo * page.pageSize,\n                  )\n                  .map((node, i) => (\n                    <NodeRows\n                      key={node.raylet.nodeId}\n                      node={node}\n                      isRefreshing={isRefreshing}\n                      startExpanded={i === 0}\n                    />\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n        {mode === \"card\" && (\n          <Grid container>\n            {nodeList\n              .slice(\n                (page.pageNo - 1) * page.pageSize,\n                page.pageNo * page.pageSize,\n              )\n              .map((e) => (\n                <Grid item xs={6}>\n                  <NodeCard node={e} />\n                </Grid>\n              ))}\n          </Grid>\n        )}\n      </TitleCard>\n    </div>\n  );\n};\n\nexport default Nodes;\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { getNodeList } from \"../../../service/node\";\nimport { NodeDetail } from \"../../../type/node\";\nimport { useSorter } from \"../../../util/hook\";\n\nexport const useNodeList = () => {\n  const [nodeList, setList] = useState<NodeDetail[]>([]);\n  const [msg, setMsg] = useState(\"Loading the nodes infos...\");\n  const [isRefreshing, setRefresh] = useState(true);\n  const [mode, setMode] = useState(\"table\");\n  const [filter, setFilter] = useState<\n    { key: \"hostname\" | \"ip\" | \"state\"; val: string }[]\n  >([]);\n  const [page, setPage] = useState({ pageSize: 10, pageNo: 1 });\n  const { sorterFunc, setOrderDesc, setSortKey, sorterKey } = useSorter(\"\");\n  const tot = useRef<NodeJS.Timeout>();\n  const changeFilter = (key: \"hostname\" | \"ip\" | \"state\", val: string) => {\n    const f = filter.find((e) => e.key === key);\n    if (f) {\n      f.val = val;\n    } else {\n      filter.push({ key, val });\n    }\n    setFilter([...filter]);\n  };\n  const onSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRefresh(event.target.checked);\n  };\n  const getList = useCallback(async () => {\n    if (!isRefreshing) {\n      return;\n    }\n    const { data } = await getNodeList();\n    const { data: rspData, msg } = data;\n    setList(rspData.summary || []);\n    if (msg) {\n      setMsg(msg);\n    } else {\n      setMsg(\"\");\n    }\n    tot.current = setTimeout(getList, 4000);\n  }, [isRefreshing]);\n\n  useEffect(() => {\n    getList();\n    return () => {\n      if (tot.current) {\n        clearTimeout(tot.current);\n      }\n    };\n  }, [getList]);\n\n  return {\n    nodeList: nodeList\n      .map((e) => ({ ...e, state: e.raylet.state }))\n      .sort((a, b) => (a.raylet.nodeId > b.raylet.nodeId ? 1 : -1))\n      .sort(sorterFunc)\n      .filter((node) =>\n        filter.every((f) => node[f.key] && node[f.key].includes(f.val)),\n      ),\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    changeFilter,\n    page,\n    originalNodes: nodeList,\n    setPage: (key: string, val: number) => setPage({ ...page, [key]: val }),\n    sorterKey,\n    setSortKey,\n    setOrderDesc,\n    mode,\n    setMode,\n  };\n};\n"],"sourceRoot":""}