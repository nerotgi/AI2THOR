{"version":3,"sources":["util/converter.ts","components/SearchComponent.tsx","components/PercentageBar.tsx","components/ActorTable.tsx","common/RowStyles.tsx","components/StatesCounter.tsx","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/icons/esm/KeyboardArrowDown.js","../node_modules/@material-ui/icons/esm/KeyboardArrowRight.js","components/WorkerTable.tsx","util/func.tsx"],"names":["memoryConverter","bytes","toFixed","useStyles","makeStyles","theme","search","margin","spacing","marginTop","SearchInput","label","onChange","defaultValue","classes","className","size","InputProps","value","target","endAdornment","position","SearchSelect","options","select","SelectProps","style","width","map","e","useStyle","container","background","border","padding","height","lineHeight","boxSizing","borderRadius","displayBar","palette","paper","right","transition","borderTopLeftRadius","borderBottomLeftRadius","text","fontSize","zIndex","color","primary","textAlign","PercentageBar","props","num","total","per","Math","round","min","max","children","ActorTable","actors","workers","useState","pageNo","setPageNo","useFilter","changeFilter","filterFunc","pageSize","setPageSize","ipLogMap","useContext","GlobalContext","actorList","Object","values","filter","list","slice","rowStyles","Fragment","flex","display","alignItems","Array","from","Set","state","onInputChange","_","trim","renderInput","params","address","ipAddress","Number","page","count","ceil","length","type","col","align","key","actorId","functionDescriptor","jobId","pid","name","numRestarts","coreWorkerStats","expandComponent","actorMap","mini","idCol","title","arrow","interactive","orange","javaFunctionDescriptor","pythonFunctionDescriptor","functionName","port","status","to","encodeURIComponent","createStyles","expandCollapseIcon","secondary","verticalAlign","overflow","textOverflow","whiteSpace","StateCounter","stateMap","forEach","item","suffix","entries","s","TableContainer","React","ref","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","overflowX","Switch","_props$color","_props$edge","edge","_props$size","icon","thumb","edgeStart","edgeEnd","concat","capitalize","SwitchBase","checkedIcon","switchBase","input","checked","disabled","track","flexShrink","colorAdjust","marginLeft","marginRight","top","left","grey","transitions","create","duration","shortest","transform","opacity","colorPrimary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","sizeSmall","boxShadow","shadows","createSvgIcon","createElement","d","ExpandableTableRow","stateKey","otherProps","isExpanded","setIsExpanded","useEffect","startsWith","TableRow","TableCell","IconButton","onClick","KeyboardArrowDown","KeyboardArrowRight","colSpan","WorkerDetailTable","RayletWorkerTable","setKey","nodeMapByIp","Button","random","Table","TableHead","TableBody","sort","aWorker","bWorker","a","cpuPercent","cpuTimes","memoryInfo","cmdline","createTime","language","maxHeight","val","lineBreak","longTextCut","join","dayjs","format","Grid","window","open","numPendingTasks","numExecutedTasks","numObjectRefsInScope","numLocalObjects","numInPlasma","usedObjectStoreMemory","len"],"mappings":"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","file":"static/js/0.c46f66f6.chunk.js","sourcesContent":["export const memoryConverter = (bytes: number) => {\n  if (bytes < 1024) {\n    return `${bytes.toFixed(4)}KB`;\n  }\n\n  if (bytes < 1024 ** 2) {\n    return `${(bytes / 1024 ** 1).toFixed(2)}KB`;\n  }\n\n  if (bytes < 1024 ** 3) {\n    return `${(bytes / 1024 ** 2).toFixed(2)}MB`;\n  }\n\n  if (bytes < 1024 ** 4) {\n    return `${(bytes / 1024 ** 3).toFixed(2)}GB`;\n  }\n\n  if (bytes < 1024 ** 5) {\n    return `${(bytes / 1024 ** 4).toFixed(2)}TB`;\n  }\n\n  if (bytes < 1024 ** 6) {\n    return `${(bytes / 1024 ** 5).toFixed(2)}TB`;\n  }\n\n  return \"\";\n};\n","import {\n  InputAdornment,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    margin: theme.spacing(1),\n    marginTop: 0,\n  },\n}));\n\nexport const SearchInput = ({\n  label,\n  onChange,\n  defaultValue,\n}: {\n  label: string;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      InputProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value);\n          }\n        },\n        defaultValue,\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <SearchOutlined />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport const SearchSelect = ({\n  label,\n  onChange,\n  options,\n}: {\n  label: string;\n  onChange?: (value: string) => void;\n  options: (string | [string, string])[];\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      select\n      SelectProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value as string);\n          }\n        },\n        style: {\n          width: 100,\n        },\n      }}\n    >\n      <MenuItem value=\"\">All</MenuItem>\n      {options.map((e) =>\n        typeof e === \"string\" ? (\n          <MenuItem value={e}>{e}</MenuItem>\n        ) : (\n          <MenuItem value={e[0]}>{e[1]}</MenuItem>\n        ),\n      )}\n    </TextField>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport React, { PropsWithChildren } from \"react\";\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    background: \"linear-gradient(45deg, #21CBF3ee 30%, #2196F3ee 90%)\",\n    border: `1px solid #ffffffbb`,\n    padding: \"0 12px\",\n    height: 18,\n    lineHeight: \"18px\",\n    position: \"relative\",\n    boxSizing: \"content-box\",\n    borderRadius: 4,\n  },\n  displayBar: {\n    background: theme.palette.background.paper,\n    position: \"absolute\",\n    right: 0,\n    height: 18,\n    transition: \"0.5s width\",\n    borderRadius: 2,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    border: \"2px solid transparent\",\n    boxSizing: \"border-box\",\n  },\n  text: {\n    fontSize: 12,\n    zIndex: 2,\n    position: \"relative\",\n    color: theme.palette.text.primary,\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n}));\n\nconst PercentageBar = (\n  props: PropsWithChildren<{ num: number; total: number }>,\n) => {\n  const { num, total } = props;\n  const classes = useStyle();\n  const per = Math.round((num / total) * 100);\n\n  return (\n    <div className={classes.container}>\n      <div\n        className={classes.displayBar}\n        style={{\n          width: `${Math.min(Math.max(0, 100 - per), 100)}%`,\n        }}\n      />\n      <div className={classes.text}>{props.children}</div>\n    </div>\n  );\n};\n\nexport default PercentageBar;\n","import {\n  InputAdornment,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { orange } from \"@material-ui/core/colors\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App\";\nimport rowStyles from \"../common/RowStyles\";\nimport { Actor } from \"../type/actor\";\nimport { Worker } from \"../type/worker\";\nimport { useFilter } from \"../util/hook\";\nimport StateCounter from \"./StatesCounter\";\nimport { StatusChip } from \"./StatusChip\";\nimport RayletWorkerTable, { ExpandableTableRow } from \"./WorkerTable\";\n\nconst ActorTable = ({\n  actors = {},\n  workers = [],\n}: {\n  actors: { [actorId: string]: Actor };\n  workers?: Worker[];\n}) => {\n  const [pageNo, setPageNo] = useState(1);\n  const { changeFilter, filterFunc } = useFilter();\n  const [pageSize, setPageSize] = useState(10);\n  const { ipLogMap } = useContext(GlobalContext);\n  const actorList = Object.values(actors || {}).filter(filterFunc);\n  const list = actorList.slice((pageNo - 1) * pageSize, pageNo * pageSize);\n  const classes = rowStyles();\n\n  return (\n    <React.Fragment>\n      <div style={{ flex: 1, display: \"flex\", alignItems: \"center\" }}>\n        <Autocomplete\n          style={{ margin: 8, width: 120 }}\n          options={Array.from(\n            new Set(Object.values(actors).map((e) => e.state)),\n          )}\n          onInputChange={(_: any, value: string) => {\n            changeFilter(\"state\", value.trim());\n          }}\n          renderInput={(params: TextFieldProps) => (\n            <TextField {...params} label=\"State\" />\n          )}\n        />\n        <Autocomplete\n          style={{ margin: 8, width: 150 }}\n          options={Array.from(\n            new Set(Object.values(actors).map((e) => e.address?.ipAddress)),\n          )}\n          onInputChange={(_: any, value: string) => {\n            changeFilter(\"address.ipAddress\", value.trim());\n          }}\n          renderInput={(params: TextFieldProps) => (\n            <TextField {...params} label=\"IP\" />\n          )}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"PID\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              changeFilter(\"pid\", value.trim());\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchOutlined />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"Name\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              changeFilter(\"name\", value.trim());\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchOutlined />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"Actor ID\"\n          size=\"small\"\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              changeFilter(\"actorId\", value.trim());\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchOutlined />\n              </InputAdornment>\n            ),\n          }}\n        />\n        <TextField\n          style={{ margin: 8, width: 120 }}\n          label=\"Page Size\"\n          size=\"small\"\n          defaultValue={10}\n          InputProps={{\n            onChange: ({ target: { value } }) => {\n              setPageSize(Math.min(Number(value), 500) || 10);\n            },\n            endAdornment: (\n              <InputAdornment position=\"end\">Per Page</InputAdornment>\n            ),\n          }}\n        />\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <div>\n          <Pagination\n            page={pageNo}\n            onChange={(e, num) => setPageNo(num)}\n            count={Math.ceil(actorList.length / pageSize)}\n          />\n        </div>\n        <div>\n          <StateCounter type=\"actor\" list={actorList} />\n        </div>\n      </div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\n              \"\",\n              \"ID\",\n              \"Restart Times\",\n              \"Name\",\n              \"Class\",\n              \"Function\",\n              \"Job Id\",\n              \"Pid\",\n              \"IP\",\n              \"Port\",\n              \"State\",\n              \"Log\",\n            ].map((col) => (\n              <TableCell align=\"center\" key={col}>\n                {col}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {list.map(\n            ({\n              actorId,\n              functionDescriptor,\n              jobId,\n              pid,\n              address,\n              state,\n              name,\n              numRestarts,\n            }) => (\n              <ExpandableTableRow\n                length={\n                  workers.filter(\n                    (e) =>\n                      e.pid === pid &&\n                      address.ipAddress === e.coreWorkerStats[0].ipAddress,\n                  ).length\n                }\n                expandComponent={\n                  <RayletWorkerTable\n                    actorMap={{}}\n                    workers={workers.filter(\n                      (e) =>\n                        e.pid === pid &&\n                        address.ipAddress === e.coreWorkerStats[0].ipAddress,\n                    )}\n                    mini\n                  />\n                }\n                key={actorId}\n              >\n                <TableCell align=\"center\">\n                  <Tooltip\n                    className={classes.idCol}\n                    title={actorId}\n                    arrow\n                    interactive\n                  >\n                    <div>{actorId}</div>\n                  </Tooltip>\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  style={{\n                    color: Number(numRestarts) > 0 ? orange[500] : \"inherit\",\n                  }}\n                >\n                  {numRestarts}\n                </TableCell>\n                <TableCell align=\"center\">{name}</TableCell>\n                <TableCell align=\"center\">\n                  {functionDescriptor?.javaFunctionDescriptor?.className}\n                  {functionDescriptor?.pythonFunctionDescriptor?.className}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {functionDescriptor?.javaFunctionDescriptor?.functionName}\n                  {functionDescriptor?.pythonFunctionDescriptor?.functionName}\n                </TableCell>\n                <TableCell align=\"center\">{jobId}</TableCell>\n                <TableCell align=\"center\">{pid}</TableCell>\n                <TableCell align=\"center\">{address?.ipAddress}</TableCell>\n                <TableCell align=\"center\">{address?.port}</TableCell>\n                <TableCell align=\"center\">\n                  <StatusChip type=\"actor\" status={state} />\n                </TableCell>\n                <TableCell align=\"center\">\n                  {ipLogMap[address?.ipAddress] && (\n                    <Link\n                      target=\"_blank\"\n                      to={`/log/${encodeURIComponent(\n                        ipLogMap[address?.ipAddress],\n                      )}?fileName=${jobId}-${pid}`}\n                    >\n                      Log\n                    </Link>\n                  )}\n                </TableCell>\n              </ExpandableTableRow>\n            ),\n          )}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default ActorTable;\n","import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst rowStyles = makeStyles((theme) =>\n  createStyles({\n    expandCollapseIcon: {\n      color: theme.palette.text.secondary,\n      fontSize: \"1.5em\",\n      verticalAlign: \"middle\",\n    },\n    idCol: {\n      display: \"block\",\n      width: \"50px\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    },\n  }),\n);\n\nexport default rowStyles;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { StatusChip } from \"./StatusChip\";\n\nconst StateCounter = ({\n  type,\n  list,\n}: {\n  type: string;\n  list: { state: string }[];\n}) => {\n  const stateMap = {} as { [state: string]: number };\n  list.forEach(({ state }) => {\n    stateMap[state] = stateMap[state] + 1 || 1;\n  });\n\n  return (\n    <Grid container spacing={2} alignItems=\"center\">\n      <Grid item>\n        <StatusChip status=\"TOTAL\" type={type} suffix={`x ${list.length}`} />\n      </Grid>\n      {Object.entries(stateMap).map(([s, num]) => (\n        <Grid item>\n          <StatusChip status={s} type={type} suffix={` x ${num}`} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default StateCounter;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');","import {\n  Button,\n  Grid,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { KeyboardArrowDown, KeyboardArrowRight } from \"@material-ui/icons\";\nimport dayjs from \"dayjs\";\nimport React, {\n  PropsWithChildren,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"../App\";\nimport { Actor } from \"../type/actor\";\nimport { CoreWorkerStats, Worker } from \"../type/worker\";\nimport { memoryConverter } from \"../util/converter\";\nimport { longTextCut } from \"../util/func\";\n\nimport { useFilter } from \"../util/hook\";\nimport ActorTable from \"./ActorTable\";\nimport PercentageBar from \"./PercentageBar\";\nimport { SearchInput } from \"./SearchComponent\";\n\nexport const ExpandableTableRow = ({\n  children,\n  expandComponent,\n  length,\n  stateKey = \"\",\n  ...otherProps\n}: PropsWithChildren<{\n  expandComponent: ReactNode;\n  length: number;\n  stateKey?: string;\n}>) => {\n  const [isExpanded, setIsExpanded] = React.useState(false);\n\n  useEffect(() => {\n    if (stateKey.startsWith(\"ON\")) {\n      setIsExpanded(true);\n    } else if (stateKey.startsWith(\"OFF\")) {\n      setIsExpanded(false);\n    }\n  }, [stateKey]);\n\n  if (length < 1) {\n    return (\n      <TableRow {...otherProps}>\n        <TableCell padding=\"checkbox\" />\n        {children}\n      </TableRow>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow {...otherProps}>\n        <TableCell padding=\"checkbox\">\n          <IconButton\n            style={{ color: \"inherit\" }}\n            onClick={() => setIsExpanded(!isExpanded)}\n          >\n            {length}\n            {isExpanded ? <KeyboardArrowDown /> : <KeyboardArrowRight />}\n          </IconButton>\n        </TableCell>\n        {children}\n      </TableRow>\n      {isExpanded && (\n        <TableRow>\n          <TableCell colSpan={24}>{expandComponent}</TableCell>\n        </TableRow>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst WorkerDetailTable = ({\n  actorMap,\n  coreWorkerStats,\n}: {\n  actorMap: { [actorId: string]: Actor };\n  coreWorkerStats: CoreWorkerStats[];\n}) => {\n  const actors = {} as { [actorId: string]: Actor };\n  (coreWorkerStats || [])\n    .filter((e) => actorMap[e.actorId])\n    .forEach((e) => (actors[e.actorId] = actorMap[e.actorId]));\n\n  if (!Object.values(actors).length) {\n    return <p>The Worker Haven't Had Related Actor Yet.</p>;\n  }\n\n  return (\n    <TableContainer>\n      <ActorTable actors={actors} />\n    </TableContainer>\n  );\n};\n\nconst RayletWorkerTable = ({\n  workers = [],\n  actorMap,\n  mini,\n}: {\n  workers: Worker[];\n  actorMap: { [actorId: string]: Actor };\n  mini?: boolean;\n}) => {\n  const { changeFilter, filterFunc } = useFilter();\n  const [key, setKey] = useState(\"\");\n  const { nodeMapByIp, ipLogMap } = useContext(GlobalContext);\n  const open = () => setKey(`ON${Math.random()}`);\n  const close = () => setKey(`OFF${Math.random()}`);\n\n  return (\n    <React.Fragment>\n      {!mini && (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <SearchInput\n            label=\"Pid\"\n            onChange={(value) => changeFilter(\"pid\", value)}\n          />\n          <Button onClick={open}>Expand All</Button>\n          <Button onClick={close}>Collapse All</Button>\n        </div>\n      )}{\" \"}\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\n              \"\",\n              \"Pid\",\n              \"CPU\",\n              \"CPU Times\",\n              \"Memory\",\n              \"CMD Line\",\n              \"Create Time\",\n              \"Log\",\n              \"Ops\",\n              \"IP\",\n              \"Tasks\",\n              \"Objects\",\n            ].map((col) => (\n              <TableCell align=\"center\" key={col}>\n                {col}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {workers\n            .filter(filterFunc)\n            .sort((aWorker, bWorker) => {\n              const a =\n                (aWorker.coreWorkerStats || []).filter(\n                  (e) => actorMap[e.actorId],\n                ).length || 0;\n              const b =\n                (bWorker.coreWorkerStats || []).filter(\n                  (e) => actorMap[e.actorId],\n                ).length || 0;\n              return b - a;\n            })\n            .map(\n              ({\n                pid,\n                cpuPercent,\n                cpuTimes,\n                memoryInfo,\n                cmdline,\n                createTime,\n                coreWorkerStats = [],\n                language,\n              }) => (\n                <ExpandableTableRow\n                  expandComponent={\n                    <WorkerDetailTable\n                      actorMap={actorMap}\n                      coreWorkerStats={coreWorkerStats}\n                    />\n                  }\n                  length={\n                    (coreWorkerStats || []).filter((e) => actorMap[e.actorId])\n                      .length\n                  }\n                  key={pid}\n                  stateKey={key}\n                >\n                  <TableCell align=\"center\">{pid}</TableCell>\n                  <TableCell align=\"center\">\n                    <PercentageBar num={Number(cpuPercent)} total={100}>\n                      {cpuPercent}%\n                    </PercentageBar>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div style={{ maxHeight: 55, overflow: \"auto\" }}>\n                      {Object.entries(cpuTimes || {}).map(([key, val]) => (\n                        <div style={{ margin: 4 }}>\n                          {key}:{val}%\n                        </div>\n                      ))}\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div style={{ maxHeight: 55, overflow: \"auto\" }}>\n                      {Object.entries(memoryInfo || {}).map(([key, val]) => (\n                        <div style={{ margin: 4 }}>\n                          {key}:{memoryConverter(val)}\n                        </div>\n                      ))}\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\" style={{ lineBreak: \"anywhere\" }}>\n                    {cmdline && longTextCut(cmdline.filter((e) => e).join(\" \"))}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {dayjs(createTime * 1000).format(\"YYYY/MM/DD HH:mm:ss\")}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Grid container spacing={2}>\n                      {ipLogMap[coreWorkerStats[0]?.ipAddress] && (\n                        <Grid item>\n                          <Link\n                            target=\"_blank\"\n                            to={`/log/${encodeURIComponent(\n                              ipLogMap[coreWorkerStats[0]?.ipAddress],\n                            )}?fileName=${\n                              coreWorkerStats[0].jobId || \"\"\n                            }-${pid}`}\n                          >\n                            Log\n                          </Link>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {language === \"JAVA\" ? (\n                      <div>\n                        <Button\n                          onClick={() => {\n                            window.open(\n                              `#/cmd/jstack/${coreWorkerStats[0]?.ipAddress}/${pid}`,\n                            );\n                          }}\n                        >\n                          jstack\n                        </Button>{\" \"}\n                        <Button\n                          onClick={() => {\n                            window.open(\n                              `#/cmd/jmap/${coreWorkerStats[0]?.ipAddress}/${pid}`,\n                            );\n                          }}\n                        >\n                          jmap\n                        </Button>\n                        <Button\n                          onClick={() => {\n                            window.open(\n                              `#/cmd/jstat/${coreWorkerStats[0]?.ipAddress}/${pid}`,\n                            );\n                          }}\n                        >\n                          jstat\n                        </Button>\n                      </div>\n                    ) : (\n                      \"N/A\"\n                    )}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {nodeMapByIp[coreWorkerStats[0]?.ipAddress] ? (\n                      <Link\n                        target=\"_blank\"\n                        to={`/node/${\n                          nodeMapByIp[coreWorkerStats[0]?.ipAddress]\n                        }`}\n                      >\n                        {coreWorkerStats[0]?.ipAddress}\n                      </Link>\n                    ) : (\n                      coreWorkerStats[0]?.ipAddress\n                    )}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div>\n                      Pending tasks: {coreWorkerStats[0]?.numPendingTasks}\n                    </div>\n                    <div>\n                      Executed tasks: {coreWorkerStats[0]?.numExecutedTasks}\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div>\n                      ObjectRefs in scope:{\" \"}\n                      {coreWorkerStats[0]?.numObjectRefsInScope}\n                    </div>\n                    <div>\n                      Objects in local memory store:{\" \"}\n                      {coreWorkerStats[0]?.numLocalObjects}\n                    </div>\n                    <div>\n                      Objects in plasma store: {coreWorkerStats[0]?.numInPlasma}\n                    </div>\n                    <div>\n                      Object store Memory used (MiB):{\" \"}\n                      {coreWorkerStats[0]?.usedObjectStoreMemory}\n                    </div>\n                  </TableCell>\n                </ExpandableTableRow>\n              ),\n            )}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default RayletWorkerTable;\n","import { Tooltip } from \"@material-ui/core\";\nimport React, { CSSProperties } from \"react\";\n\nexport const longTextCut = (text: string = \"\", len: number = 28) => (\n  <Tooltip title={text} interactive>\n    <span>{text.length > len ? text.slice(0, len) + \"...\" : text}</span>\n  </Tooltip>\n);\n\nexport const jsonFormat = (str: string | object) => {\n  const preStyle = {\n    textAlign: \"left\",\n    wordBreak: \"break-all\",\n    whiteSpace: \"pre-wrap\",\n  } as CSSProperties;\n  if (typeof str === \"object\") {\n    return <pre style={preStyle}>{JSON.stringify(str, null, 2)}</pre>;\n  }\n  try {\n    const j = JSON.parse(str);\n    if (typeof j !== \"object\") {\n      return JSON.stringify(j);\n    }\n    return <pre style={preStyle}>{JSON.stringify(j, null, 2)}</pre>;\n  } catch (e) {\n    return str;\n  }\n};\n"],"sourceRoot":""}